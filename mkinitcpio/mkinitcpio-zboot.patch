--- mkinitcpio-33/functions	2022-11-21 04:18:56.000000000 +0800
+++ mkinitcpio-33/functions	2022-12-07 21:40:21.688823459 +0800
@@ -203,9 +203,64 @@
         return
     fi
 
+    read -rd '' bytes < <(hexdump -s 4 -n 4 -e '"%c"' "$1")
+    if [[ $bytes == 'zimg' ]]; then
+        echo 'zimg'
+        return
+    fi
+
     # out of ideas, assuming uncompressed
 }
 
+kver_zimage() {
+    # EFI ZBOOT Kernel
+    # drivers/firmware/efi/libstub/Makefile.zboot
+    # drivers/firmware/efi/libstub/zboot-header.S
+    local kver start size comp_type
+    local reader=cat
+
+    start=$(hexdump -s 8 -n 4 -e '"%0d"' "$1")
+    size=$(hexdump -s 12 -n 4 -e '"%0d"' "$1")
+    read -rd '' comp_type < <(hexdump -s 24 -n 36 -v -e '"%c"' "$1")
+
+    [[ $start = +([0-9]) ]] || return 1
+    [[ $size = +([0-9]) ]] || return 1
+
+    case $comp_type in
+      gzip)
+	reader=zcat
+	;;
+      lz4)
+	reader=lz4cat
+	size=$(( $size+4 ))
+	;;
+      lzma)
+	reader=xzcat
+	size=$(( $size+4 ))
+	;;
+      lzo)
+	reader="lzop -d"
+	size=$(( $size+4 ))
+	;;
+      xzkern)
+	reader=xzcat
+	size=$(( $size+4 ))
+	;;
+      zstd22)
+	reader=zstdcat
+	size=$(( $size+4 ))
+	;;
+      *)
+	reader=$comp_type
+	size=$(( $size+4 ))
+	;;
+    esac
+
+    read _ _ kver _ < <(dd if="$1" bs=1 count=$size skip=$start 2>/dev/null | $reader - | grep -m1 -aoE  'Linux version .(\.[-[:alnum:]+]+)+')
+
+    printf '%s' "$kver"
+}
+
 kver_generic() {
     # For unknown architectures, we can try to grep the uncompressed or gzipped
     # image for the boot banner.
@@ -215,13 +270,20 @@
 
     # Loosely grep for `linux_banner`:
     # https://elixir.bootlin.com/linux/v5.7.2/source/init/version.c#L46
-    local kver= reader=cat
-    
-    [[ $(detect_compression "$1") == 'gzip' ]] && reader=zcat
+    local kver= reader=cat comp_type
 
-    read _ _ kver _ < <($reader "$1" | grep -m1 -aoE 'Linux version .(\.[-[:alnum:]+]+)+')
+    comp_type=$(detect_compression "$1")
 
-    printf '%s' "$kver"
+    # EFI ZBOOT Kernel
+    if [[ $comp_type == 'zimg' ]]; then
+        kver_zimage $1
+    else
+        [[ $(detect_compression "$1") == 'gzip' ]] && reader=zcat
+
+        read _ _ kver _ < <($reader "$1" | grep -m1 -aoE 'Linux version .(\.[-[:alnum:]+]+)+')
+
+        printf '%s' "$kver"
+    fi
 }
 
 kver() {
